{"version":3,"file":"CommentList-9aa93d39.js","sources":["../../src/CommentList/CommentList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Box, Flex } from 'theme-ui'\n\nimport { Button } from '../Button/Button'\nimport { ButtonShowReplies } from '../ButtonShowReplies/ButtonShowReplies'\nimport { CommentItem } from '../CommentItem/CommentItem'\nimport { CreateReply } from '../CreateReply/CreateReply'\nimport { Icon } from '../Icon/Icon'\n\nimport type { IComment } from '../CommentItem/types'\n\nconst MAX_COMMENTS = 5\n\ninterface IPropsShared {\n  handleDelete: (_id: string) => Promise<void>\n  handleEdit: (_id: string, comment: string) => Promise<void>\n  handleEditRequest: () => Promise<void>\n  isLoggedIn: boolean\n  isReplies: boolean\n  maxLength: number\n  onSubmitReply?: (_id: string, reply: string) => Promise<void>\n}\n\nexport interface IPropsCommentContainer extends IPropsShared {\n  comment: IComment\n  handleCommentReply?: (commentId: string | null) => void\n  supportReplies: boolean\n}\n\nexport interface IPropsCommentList extends IPropsShared {\n  supportReplies?: boolean\n  comments: IComment[]\n  highlightedCommentId?: string\n  onMoreComments?: () => void\n  setCommentBeingRepliedTo?: (commentId: string | null) => void\n}\n\nexport const CommentContainer = (props: IPropsCommentContainer) => {\n  const [isShowReplies, setIsShowReplies] = useState(false)\n  const {\n    comment,\n    handleDelete,\n    handleEditRequest,\n    handleEdit,\n    supportReplies,\n    isLoggedIn,\n    isReplies,\n    maxLength,\n    onSubmitReply,\n  } = props\n  const { _id, creatorName, replies } = comment\n\n  const replyArrow = () => {\n    return (\n      <Box sx={{ paddingTop: 4 }}>\n        <Icon glyph=\"arrow-curved-bottom-right\" />\n      </Box>\n    )\n  }\n\n  const repliesButton = () => {\n    return (\n      <ButtonShowReplies\n        creatorName={creatorName}\n        isShowReplies={isShowReplies}\n        replies={replies || []}\n        setIsShowReplies={() => setIsShowReplies(!isShowReplies)}\n      />\n    )\n  }\n\n  const createReply = () => {\n    if (onSubmitReply) {\n      return (\n        <CreateReply\n          commentId={_id}\n          isLoggedIn={isLoggedIn}\n          maxLength={maxLength}\n          onSubmit={onSubmitReply}\n        />\n      )\n    }\n  }\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'white',\n        borderRadius: 1,\n        padding: 3,\n      }}\n    >\n      <CommentItem\n        comment={comment}\n        handleEditRequest={handleEditRequest}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        isReply={isReplies ? true : false}\n      />\n\n      {supportReplies && !isShowReplies && repliesButton()}\n\n      {supportReplies && isShowReplies ? (\n        <Flex\n          sx={{\n            alignItems: 'stretch',\n            flexDirection: 'row',\n          }}\n        >\n          {replies && replyArrow()}\n\n          <Flex\n            sx={{\n              alignItems: 'stretch',\n              flexDirection: 'column',\n              flex: 1,\n            }}\n          >\n            <CommentList\n              comments={replies || []}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n              handleEditRequest={handleEditRequest}\n              isLoggedIn={isLoggedIn}\n              isReplies={true}\n              maxLength={maxLength}\n              supportReplies={false}\n            />\n\n            {createReply()}\n\n            {repliesButton()}\n          </Flex>\n        </Flex>\n      ) : null}\n    </Box>\n  )\n}\n\nexport const CommentList = (props: IPropsCommentList) => {\n  const {\n    comments,\n    handleDelete,\n    handleEdit,\n    handleEditRequest,\n    highlightedCommentId,\n    isLoggedIn,\n    isReplies,\n    maxLength,\n    onMoreComments,\n    onSubmitReply,\n    supportReplies = false,\n  } = props\n\n  const [moreComments, setMoreComments] = useState(1)\n  const shownComments = moreComments * MAX_COMMENTS\n\n  const scrollIntoRelevantComment = (commentId: string) => {\n    setTimeout(() => {\n      // the delay is needed, otherwise the scroll is not happening in Firefox\n      document\n        .getElementById(`comment:${commentId}`)\n        ?.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }, 0)\n  }\n\n  const handleMoreComments = () => {\n    onMoreComments && onMoreComments()\n    setMoreComments(moreComments + 1)\n  }\n\n  useEffect(() => {\n    if (!highlightedCommentId) return\n\n    const i = comments.findIndex((comment) =>\n      highlightedCommentId.includes(comment._id),\n    )\n    if (i >= 0) {\n      setMoreComments(Math.floor(i / MAX_COMMENTS) + 1)\n      scrollIntoRelevantComment(highlightedCommentId)\n    }\n  }, [highlightedCommentId, comments])\n\n  return (\n    <Box\n      mb={4}\n      sx={{\n        width: '100%',\n        display: 'block',\n      }}\n    >\n      {comments &&\n        comments.slice(0, shownComments).map((comment) => (\n          <Box\n            key={comment._id}\n            data-testid=\"CommentList: item\"\n            sx={{\n              marginBottom: 4,\n              border: `${\n                highlightedCommentId === comment._id\n                  ? '2px dashed black'\n                  : 'none'\n              }`,\n              borderRadius: 1,\n            }}\n          >\n            <CommentContainer\n              comment={comment}\n              handleEditRequest={handleEditRequest}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n              isLoggedIn={isLoggedIn}\n              isReplies={isReplies}\n              maxLength={maxLength}\n              onSubmitReply={onSubmitReply}\n              supportReplies={supportReplies}\n            />\n          </Box>\n        ))}\n\n      {comments && comments.length > shownComments && (\n        <Flex>\n          <Button\n            sx={{\n              margin: '0 auto',\n            }}\n            variant=\"outline\"\n            onClick={handleMoreComments}\n          >\n            show more comments\n          </Button>\n        </Flex>\n      )}\n    </Box>\n  )\n}\n"],"names":["MAX_COMMENTS","CommentContainer","props","isShowReplies","setIsShowReplies","useState","comment","handleDelete","handleEditRequest","handleEdit","supportReplies","isLoggedIn","isReplies","maxLength","onSubmitReply","_id","creatorName","replies","replyArrow","jsx","Box","Icon","repliesButton","ButtonShowReplies","createReply","CreateReply","jsxs","CommentItem","Flex","CommentList","comments","highlightedCommentId","onMoreComments","moreComments","setMoreComments","shownComments","scrollIntoRelevantComment","commentId","_a","handleMoreComments","useEffect","i","Button"],"mappings":"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"}