import{a as o}from"./jsx-runtime-913be41c.js";import{c as p,f as e}from"./utils-0ff7b291.js";import{C as s}from"./CommentList-9aa93d39.js";import"./index-2506bfc3.js";import"./index-a7768622.js";import"./Button-aae6b698.js";import"./Icon-10b171e1.js";import"./theme-ui-core-jsx-runtime.esm-9bc3c749.js";import"./emotion-element-6a883da9.browser.esm-becb4ad2.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-11801e73.js";import"./hoist-non-react-statics.cjs-dd442a32.js";import"./theme-ui-css.esm-a1197288.js";import"./emotion-styled.browser.esm-935c8bd8.js";import"./supporter-29075ee8.js";import"./icon-arrow-down-33f070d5.js";import"./icon-star-active-309631d9.js";import"./theme-ui-components.esm-600c41e5.js";import"./emotion-react.browser.esm-ac7fc07b.js";import"./ButtonShowReplies-84a62dc7.js";import"./CommentItem-3415ae30.js";import"./ConfirmModal-8f4fd5e0.js";import"./Modal-843dd831.js";import"./index-0dfb046a.js";import"./index-4d501b15.js";import"./EditComment-e33191eb.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./index.esm-f81faee8.js";import"./FieldTextarea-51366082.js";import"./CharacterCount-56c209d3.js";import"./LinkifyText-f6c7c6e0.js";import"./ExternalLink-da92e34d.js";import"./InternalLink-949536b4.js";import"./index-54304c9c.js";import"./index-150eb7c2.js";import"./Username-d4b4b02e.js";import"./CreateReply-4cdf9d85.js";import"./CreateComment-e25e73ac.js";import"./MemberBadge-fbf89a79.js";const ue={title:"Components/CommentList",component:s},m=()=>o(s,{comments:p(2),handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),isLoggedIn:!0,isReplies:!1,maxLength:1e3,onMoreComments:()=>null}),r=()=>o(s,{comments:p(20),handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),isLoggedIn:!0,isReplies:!1,maxLength:1e3,onMoreComments:()=>null}),i=()=>{const t=[e({replies:[e(),e()]}),e({replies:[e()]}),e()];return o(s,{supportReplies:!0,comments:t,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),isLoggedIn:!0,isReplies:!1,maxLength:1e3,onMoreComments:()=>Promise.resolve(),onSubmitReply:()=>Promise.resolve()})},n=()=>{const t=[e({replies:[e(),e()]}),e(),e()];return o(s,{supportReplies:!0,comments:t,isLoggedIn:!0,isReplies:!1,maxLength:800,setCommentBeingRepliedTo:()=>{},handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),onMoreComments:()=>Promise.resolve()})},l=()=>{const t=[e({replies:[e({replies:[e()]})]})];return o(s,{supportReplies:!0,isLoggedIn:!0,isReplies:!1,maxLength:800,comments:t,setCommentBeingRepliedTo:()=>{},handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),onMoreComments:()=>Promise.resolve()})},d=p(20,{isEditable:!1}),a=()=>o(s,{comments:d,highlightedCommentId:d[d.length-2]._id,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),isLoggedIn:!0,isReplies:!1,maxLength:1e3,onMoreComments:()=>null});var h,c,u;m.parameters={...m.parameters,docs:{...(h=m.parameters)==null?void 0:h.docs,source:{originalSource:"() => <CommentList comments={createFakeComments(2)} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} isLoggedIn={true} isReplies={false} maxLength={1000} onMoreComments={() => null} />",...(u=(c=m.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,C,v;r.parameters={...r.parameters,docs:{...(g=r.parameters)==null?void 0:g.docs,source:{originalSource:"() => <CommentList comments={createFakeComments(20)} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} isLoggedIn={true} isReplies={false} maxLength={1000} onMoreComments={() => null} />",...(v=(C=r.parameters)==null?void 0:C.docs)==null?void 0:v.source}}};var P,R,L;i.parameters={...i.parameters,docs:{...(P=i.parameters)==null?void 0:P.docs,source:{originalSource:`() => {
  const comments = [fakeComment({
    replies: [fakeComment(), fakeComment()]
  }), fakeComment({
    replies: [fakeComment()]
  }), fakeComment()];
  return <CommentList supportReplies={true} comments={comments} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} isLoggedIn={true} isReplies={false} maxLength={1000} onMoreComments={() => Promise.resolve()} onSubmitReply={() => Promise.resolve()} />;
}`,...(L=(R=i.parameters)==null?void 0:R.docs)==null?void 0:L.source}}};var f,E,x;n.parameters={...n.parameters,docs:{...(f=n.parameters)==null?void 0:f.docs,source:{originalSource:`() => {
  const comments = [fakeComment({
    replies: [fakeComment(), fakeComment()]
  }), fakeComment(), fakeComment()];
  return <CommentList supportReplies={true} comments={comments} isLoggedIn={true} isReplies={false} maxLength={800} setCommentBeingRepliedTo={() => {}} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} onMoreComments={() => Promise.resolve()} />;
}`,...(x=(E=n.parameters)==null?void 0:E.docs)==null?void 0:x.source}}};var k,D,I;l.parameters={...l.parameters,docs:{...(k=l.parameters)==null?void 0:k.docs,source:{originalSource:`() => {
  const comments = [fakeComment({
    replies: [fakeComment({
      replies: [fakeComment()]
    })]
  })];
  return <CommentList supportReplies={true} isLoggedIn={true} isReplies={false} maxLength={800} comments={comments} setCommentBeingRepliedTo={() => {}} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} onMoreComments={() => Promise.resolve()} />;
}`,...(I=(D=l.parameters)==null?void 0:D.docs)==null?void 0:I.source}}};var M,q,S;a.parameters={...a.parameters,docs:{...(M=a.parameters)==null?void 0:M.docs,source:{originalSource:"() => <CommentList comments={highlightedCommentList} highlightedCommentId={highlightedCommentList[highlightedCommentList.length - 2]._id} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} isLoggedIn={true} isReplies={false} maxLength={1000} onMoreComments={() => null} />",...(S=(q=a.parameters)==null?void 0:q.docs)==null?void 0:S.source}}};const ge=["Default","Expandable","WithNestedComments","WithNestedCommentsAndReplies","WithNestedCommentsAndRepliesMaxDepthTwo","Highlighted"];export{m as Default,r as Expandable,a as Highlighted,i as WithNestedComments,n as WithNestedCommentsAndReplies,l as WithNestedCommentsAndRepliesMaxDepthTwo,ge as __namedExportsOrder,ue as default};
//# sourceMappingURL=CommentList.stories-0fd21866.js.map
